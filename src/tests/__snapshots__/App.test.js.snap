// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Router
        forceRefresh={true}
        history={
                Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      }
        }
>
        <Switch>
                <Route
                        component={[Function]}
                        exact={true}
                        path="/"
                />
                <Route
                        component={[Function]}
                        exact={true}
                        path="/signup"
                />
                <Route
                        component={[Function]}
                        path="/login"
                />
                <Route
                        component={[Function]}
                        path="/addMeal"
                />
                <Route
                        component={[Function]}
                        path="/updateMeal"
                />
                <Route
                        component={[Function]}
                        path="/getMeals"
                />
                <Route
                        component={[Function]}
                        path="/deleteMeal"
                />
                <Route
                        component={[Function]}
                        path="/getMenu"
                />
                <Route
                        component={[Function]}
                        path="/createMenu"
                />
                <Route
                        component={[Function]}
                        path="/createOrder"
                />
                <Route
                        component={[Function]}
                        path="/getOrder"
                />
                <Route
                        component={[Function]}
                        path="/test"
                />
                <Route
                        component={[Function]}
                        path="/home"
                />
                <Route
                        component={[Function]}
                        path="/Meal"
                />
                <Route
                        component={[Function]}
                        path="/userMenu"
                />
                <Route
                        component={[Function]}
                        path="/adminOrders"
                />
                <Route
                        component={[Function]}
                        path="/adminMenu"
                />
                <Route
                        component={[Function]}
                        path="/adminlogin"
                />
                <Route
                        component={[Function]}
                        path="/adminregister"
                />
                <Route
                        component={[Function]}
                        path="/day"
                />
                <Route
                        component={[Function]}
                        path="/now"
                />
                <Route
                        component={[Function]}
                        path="/history"
                />
                <Route
                        component={[Function]}
                />
        </Switch>
</Router>,
      "store": Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Switch>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/signup"
          />
          <Route
                    component={[Function]}
                    path="/login"
          />
          <Route
                    component={[Function]}
                    path="/addMeal"
          />
          <Route
                    component={[Function]}
                    path="/updateMeal"
          />
          <Route
                    component={[Function]}
                    path="/getMeals"
          />
          <Route
                    component={[Function]}
                    path="/deleteMeal"
          />
          <Route
                    component={[Function]}
                    path="/getMenu"
          />
          <Route
                    component={[Function]}
                    path="/createMenu"
          />
          <Route
                    component={[Function]}
                    path="/createOrder"
          />
          <Route
                    component={[Function]}
                    path="/getOrder"
          />
          <Route
                    component={[Function]}
                    path="/test"
          />
          <Route
                    component={[Function]}
                    path="/home"
          />
          <Route
                    component={[Function]}
                    path="/Meal"
          />
          <Route
                    component={[Function]}
                    path="/userMenu"
          />
          <Route
                    component={[Function]}
                    path="/adminOrders"
          />
          <Route
                    component={[Function]}
                    path="/adminMenu"
          />
          <Route
                    component={[Function]}
                    path="/adminlogin"
          />
          <Route
                    component={[Function]}
                    path="/adminregister"
          />
          <Route
                    component={[Function]}
                    path="/day"
          />
          <Route
                    component={[Function]}
                    path="/now"
          />
          <Route
                    component={[Function]}
                    path="/history"
          />
          <Route
                    component={[Function]}
          />
</Switch>,
        "forceRefresh": true,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/signup"
/>,
            <Route
              component={[Function]}
              path="/login"
/>,
            <Route
              component={[Function]}
              path="/addMeal"
/>,
            <Route
              component={[Function]}
              path="/updateMeal"
/>,
            <Route
              component={[Function]}
              path="/getMeals"
/>,
            <Route
              component={[Function]}
              path="/deleteMeal"
/>,
            <Route
              component={[Function]}
              path="/getMenu"
/>,
            <Route
              component={[Function]}
              path="/createMenu"
/>,
            <Route
              component={[Function]}
              path="/createOrder"
/>,
            <Route
              component={[Function]}
              path="/getOrder"
/>,
            <Route
              component={[Function]}
              path="/test"
/>,
            <Route
              component={[Function]}
              path="/home"
/>,
            <Route
              component={[Function]}
              path="/Meal"
/>,
            <Route
              component={[Function]}
              path="/userMenu"
/>,
            <Route
              component={[Function]}
              path="/adminOrders"
/>,
            <Route
              component={[Function]}
              path="/adminMenu"
/>,
            <Route
              component={[Function]}
              path="/adminlogin"
/>,
            <Route
              component={[Function]}
              path="/adminregister"
/>,
            <Route
              component={[Function]}
              path="/day"
/>,
            <Route
              component={[Function]}
              path="/now"
/>,
            <Route
              component={[Function]}
              path="/history"
/>,
            <Route
              component={[Function]}
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/signup",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/addMeal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/updateMeal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/getMeals",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/deleteMeal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/getMenu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/createMenu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/createOrder",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/getOrder",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/test",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/home",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/Meal",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/userMenu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/adminOrders",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/adminMenu",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/adminlogin",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/adminregister",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/day",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/now",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/history",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Router
          forceRefresh={true}
          history={
                    Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
          }
>
          <Switch>
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/"
                    />
                    <Route
                              component={[Function]}
                              exact={true}
                              path="/signup"
                    />
                    <Route
                              component={[Function]}
                              path="/login"
                    />
                    <Route
                              component={[Function]}
                              path="/addMeal"
                    />
                    <Route
                              component={[Function]}
                              path="/updateMeal"
                    />
                    <Route
                              component={[Function]}
                              path="/getMeals"
                    />
                    <Route
                              component={[Function]}
                              path="/deleteMeal"
                    />
                    <Route
                              component={[Function]}
                              path="/getMenu"
                    />
                    <Route
                              component={[Function]}
                              path="/createMenu"
                    />
                    <Route
                              component={[Function]}
                              path="/createOrder"
                    />
                    <Route
                              component={[Function]}
                              path="/getOrder"
                    />
                    <Route
                              component={[Function]}
                              path="/test"
                    />
                    <Route
                              component={[Function]}
                              path="/home"
                    />
                    <Route
                              component={[Function]}
                              path="/Meal"
                    />
                    <Route
                              component={[Function]}
                              path="/userMenu"
                    />
                    <Route
                              component={[Function]}
                              path="/adminOrders"
                    />
                    <Route
                              component={[Function]}
                              path="/adminMenu"
                    />
                    <Route
                              component={[Function]}
                              path="/adminlogin"
                    />
                    <Route
                              component={[Function]}
                              path="/adminregister"
                    />
                    <Route
                              component={[Function]}
                              path="/day"
                    />
                    <Route
                              component={[Function]}
                              path="/now"
                    />
                    <Route
                              component={[Function]}
                              path="/history"
                    />
                    <Route
                              component={[Function]}
                    />
          </Switch>
</Router>,
        "store": Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Switch>
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/signup"
            />
            <Route
                        component={[Function]}
                        path="/login"
            />
            <Route
                        component={[Function]}
                        path="/addMeal"
            />
            <Route
                        component={[Function]}
                        path="/updateMeal"
            />
            <Route
                        component={[Function]}
                        path="/getMeals"
            />
            <Route
                        component={[Function]}
                        path="/deleteMeal"
            />
            <Route
                        component={[Function]}
                        path="/getMenu"
            />
            <Route
                        component={[Function]}
                        path="/createMenu"
            />
            <Route
                        component={[Function]}
                        path="/createOrder"
            />
            <Route
                        component={[Function]}
                        path="/getOrder"
            />
            <Route
                        component={[Function]}
                        path="/test"
            />
            <Route
                        component={[Function]}
                        path="/home"
            />
            <Route
                        component={[Function]}
                        path="/Meal"
            />
            <Route
                        component={[Function]}
                        path="/userMenu"
            />
            <Route
                        component={[Function]}
                        path="/adminOrders"
            />
            <Route
                        component={[Function]}
                        path="/adminMenu"
            />
            <Route
                        component={[Function]}
                        path="/adminlogin"
            />
            <Route
                        component={[Function]}
                        path="/adminregister"
            />
            <Route
                        component={[Function]}
                        path="/day"
            />
            <Route
                        component={[Function]}
                        path="/now"
            />
            <Route
                        component={[Function]}
                        path="/history"
            />
            <Route
                        component={[Function]}
            />
</Switch>,
          "forceRefresh": true,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/signup"
/>,
              <Route
                component={[Function]}
                path="/login"
/>,
              <Route
                component={[Function]}
                path="/addMeal"
/>,
              <Route
                component={[Function]}
                path="/updateMeal"
/>,
              <Route
                component={[Function]}
                path="/getMeals"
/>,
              <Route
                component={[Function]}
                path="/deleteMeal"
/>,
              <Route
                component={[Function]}
                path="/getMenu"
/>,
              <Route
                component={[Function]}
                path="/createMenu"
/>,
              <Route
                component={[Function]}
                path="/createOrder"
/>,
              <Route
                component={[Function]}
                path="/getOrder"
/>,
              <Route
                component={[Function]}
                path="/test"
/>,
              <Route
                component={[Function]}
                path="/home"
/>,
              <Route
                component={[Function]}
                path="/Meal"
/>,
              <Route
                component={[Function]}
                path="/userMenu"
/>,
              <Route
                component={[Function]}
                path="/adminOrders"
/>,
              <Route
                component={[Function]}
                path="/adminMenu"
/>,
              <Route
                component={[Function]}
                path="/adminlogin"
/>,
              <Route
                component={[Function]}
                path="/adminregister"
/>,
              <Route
                component={[Function]}
                path="/day"
/>,
              <Route
                component={[Function]}
                path="/now"
/>,
              <Route
                component={[Function]}
                path="/history"
/>,
              <Route
                component={[Function]}
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/signup",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/addMeal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/updateMeal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/getMeals",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/deleteMeal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/getMenu",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/createMenu",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/createOrder",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/getOrder",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/test",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/home",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/Meal",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/userMenu",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/adminOrders",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/adminMenu",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/adminlogin",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/adminregister",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/day",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/now",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "path": "/history",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
