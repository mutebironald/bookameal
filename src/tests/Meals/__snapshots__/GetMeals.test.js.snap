// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Get Meal Component renders successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GetMeals
    className=""
    id={1}
    updateMealRequest={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Navbar
          color="success"
          expand="md"
          light={true}
          tag="nav"
>
          <NavbarBrand
                    href="/"
                    tag="a"
          >
                    Book-A-Meal | Home 
          </NavbarBrand>
          <NavbarToggler
                    onClick={[Function]}
                    tag="button"
                    type="button"
          />
          <Collapse
                    appear={false}
                    enter={true}
                    exit={true}
                    in={false}
                    isOpen={false}
                    mountOnEnter={false}
                    navbar={true}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    tag="div"
                    timeout={350}
                    unmountOnExit={false}
          >
                    <Nav
                              className="ml-auto"
                              navbar={true}
                              tag="ul"
                              vertical={false}
                    >
                              <NavLink
                                        activeStyle={
                                                  Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                                        }
                                        href="/getMeals"
                                        tag="a"
                              >
                                        Meals
                              </NavLink>
                              <NavLink
                                        activeStyle={
                                                  Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                                        }
                                        href="/adminMenu"
                                        tag="a"
                              >
                                        Menu
                              </NavLink>
                              <NavLink
                                        activeStyle={
                                                  Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                                        }
                                        href="/adminOrders"
                                        tag="a"
                              >
                                        Orders
                              </NavLink>
                              <NavLink
                                        activeStyle={
                                                  Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                                        }
                                        href="/adminlogin"
                                        tag="a"
                              >
                                        Logout
                              </NavLink>
                    </Nav>
          </Collapse>
</Navbar>,
        <div
          className="float-right"
>
          <div>
                    <_class
                              options={Object {}}
                    />
                    <Modal
                              autoFocus={true}
                              backdrop={true}
                              backdropTransition={
                                        Object {
                                                  "timeout": 1300,
                                                }
                              }
                              centered={false}
                              className=""
                              fade={true}
                              isOpen={false}
                              keyboard={true}
                              modalTransition={
                                        Object {
                                                  "timeout": 300,
                                                }
                              }
                              onClosed={[Function]}
                              onOpened={[Function]}
                              role="dialog"
                              toggle={[Function]}
                              zIndex={1050}
                    >
                              <ModalHeader
                                        charCode={215}
                                        closeAriaLabel="Close"
                                        tag="h5"
                                        wrapTag="div"
                              >
                                        Meals
                              </ModalHeader>
                              <ModalBody
                                        tag="div"
                              >
                                        <Connect(UpdateMealForm)
                                                  id={null}
                                                  name=""
                                                  price=""
                                        />
                              </ModalBody>
                    </Modal>
                    <Modal
                              autoFocus={true}
                              backdrop={true}
                              backdropTransition={
                                        Object {
                                                  "timeout": 1300,
                                                }
                              }
                              centered={false}
                              className=""
                              fade={true}
                              isOpen={false}
                              keyboard={true}
                              modalTransition={
                                        Object {
                                                  "timeout": 300,
                                                }
                              }
                              onClosed={[Function]}
                              onOpened={[Function]}
                              role="dialog"
                              toggle={[Function]}
                              zIndex={1050}
                    >
                              <ModalHeader
                                        charCode={215}
                                        closeAriaLabel="Close"
                                        tag="h5"
                                        toggle={[Function]}
                                        wrapTag="div"
                              >
                                        Meals
                              </ModalHeader>
                              <ModalBody
                                        tag="div"
                              >
                                        <h4>
                                                  Are you sure you want to delete this meal?
                                        </h4>
                              </ModalBody>
                              <ModalFooter
                                        tag="div"
                              >
                                        <button
                                                  className="btn btn-danger"
                                                  onClick={[Function]}
                                        >
                                                  Yes
                                        </button>
                                        <button
                                                  className="btn btn-primary"
                                                  onClick={[Function]}
                                        >
                                                  No
                                        </button>
                              </ModalFooter>
                    </Modal>
          </div>
          <Button
                    className="btn btn-success btn-sm"
                    color="secondary"
                    onClick={[Function]}
                    style={
                              Object {
                                        "height": "2rem",
                                        "width": "4rem",
                                      }
                    }
                    tag="button"
          >
                    Add
          </Button>
          <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                              Object {
                                        "timeout": 1300,
                                      }
                    }
                    centered={false}
                    className=""
                    fade={true}
                    id="add"
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                              Object {
                                        "timeout": 300,
                                      }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    role="dialog"
                    toggle={[Function]}
                    zIndex={1050}
          >
                    <ModalHeader
                              charCode={215}
                              closeAriaLabel="Close"
                              tag="h5"
                              toggle={[Function]}
                              wrapTag="div"
                    >
                              Meals
                    </ModalHeader>
                    <ModalBody
                              tag="div"
                    >
                              <Connect(AddMealForm) />
                    </ModalBody>
          </Modal>
</div>,
      ],
      "tag": "div",
      "widths": Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <NavbarBrand
              href="/"
              tag="a"
>
              Book-A-Meal | Home 
</NavbarBrand>,
            <NavbarToggler
              onClick={[Function]}
              tag="button"
              type="button"
/>,
            <Collapse
              appear={false}
              enter={true}
              exit={true}
              in={false}
              isOpen={false}
              mountOnEnter={false}
              navbar={true}
              onEnter={[Function]}
              onEntered={[Function]}
              onEntering={[Function]}
              onExit={[Function]}
              onExited={[Function]}
              onExiting={[Function]}
              tag="div"
              timeout={350}
              unmountOnExit={false}
>
              <Nav
                            className="ml-auto"
                            navbar={true}
                            tag="ul"
                            vertical={false}
              >
                            <NavLink
                                          activeStyle={
                                                        Object {
                                                                      "backgroundColor": "white",
                                                                      "color": "slategasy",
                                                                    }
                                          }
                                          href="/getMeals"
                                          tag="a"
                            >
                                          Meals
                            </NavLink>
                            <NavLink
                                          activeStyle={
                                                        Object {
                                                                      "backgroundColor": "white",
                                                                      "color": "slategasy",
                                                                    }
                                          }
                                          href="/adminMenu"
                                          tag="a"
                            >
                                          Menu
                            </NavLink>
                            <NavLink
                                          activeStyle={
                                                        Object {
                                                                      "backgroundColor": "white",
                                                                      "color": "slategasy",
                                                                    }
                                          }
                                          href="/adminOrders"
                                          tag="a"
                            >
                                          Orders
                            </NavLink>
                            <NavLink
                                          activeStyle={
                                                        Object {
                                                                      "backgroundColor": "white",
                                                                      "color": "slategasy",
                                                                    }
                                          }
                                          href="/adminlogin"
                                          tag="a"
                            >
                                          Logout
                            </NavLink>
              </Nav>
</Collapse>,
          ],
          "color": "success",
          "expand": "md",
          "light": true,
          "tag": "nav",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Book-A-Meal | Home ",
              "href": "/",
              "tag": "a",
            },
            "ref": null,
            "rendered": "Book-A-Meal | Home ",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onClick": [Function],
              "tag": "button",
              "type": "button",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "appear": false,
              "children": <Nav
                className="ml-auto"
                navbar={true}
                tag="ul"
                vertical={false}
>
                <NavLink
                                activeStyle={
                                                Object {
                                                                "backgroundColor": "white",
                                                                "color": "slategasy",
                                                              }
                                }
                                href="/getMeals"
                                tag="a"
                >
                                Meals
                </NavLink>
                <NavLink
                                activeStyle={
                                                Object {
                                                                "backgroundColor": "white",
                                                                "color": "slategasy",
                                                              }
                                }
                                href="/adminMenu"
                                tag="a"
                >
                                Menu
                </NavLink>
                <NavLink
                                activeStyle={
                                                Object {
                                                                "backgroundColor": "white",
                                                                "color": "slategasy",
                                                              }
                                }
                                href="/adminOrders"
                                tag="a"
                >
                                Orders
                </NavLink>
                <NavLink
                                activeStyle={
                                                Object {
                                                                "backgroundColor": "white",
                                                                "color": "slategasy",
                                                              }
                                }
                                href="/adminlogin"
                                tag="a"
                >
                                Logout
                </NavLink>
</Nav>,
              "enter": true,
              "exit": true,
              "in": false,
              "isOpen": false,
              "mountOnEnter": false,
              "navbar": true,
              "onEnter": [Function],
              "onEntered": [Function],
              "onEntering": [Function],
              "onExit": [Function],
              "onExited": [Function],
              "onExiting": [Function],
              "tag": "div",
              "timeout": 350,
              "unmountOnExit": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <NavLink
                    activeStyle={
                                        Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                    }
                    href="/getMeals"
                    tag="a"
>
                    Meals
</NavLink>,
                  <NavLink
                    activeStyle={
                                        Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                    }
                    href="/adminMenu"
                    tag="a"
>
                    Menu
</NavLink>,
                  <NavLink
                    activeStyle={
                                        Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                    }
                    href="/adminOrders"
                    tag="a"
>
                    Orders
</NavLink>,
                  <NavLink
                    activeStyle={
                                        Object {
                                                            "backgroundColor": "white",
                                                            "color": "slategasy",
                                                          }
                    }
                    href="/adminlogin"
                    tag="a"
>
                    Logout
</NavLink>,
                ],
                "className": "ml-auto",
                "navbar": true,
                "tag": "ul",
                "vertical": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeStyle": Object {
                      "backgroundColor": "white",
                      "color": "slategasy",
                    },
                    "children": "Meals",
                    "href": "/getMeals",
                    "tag": "a",
                  },
                  "ref": null,
                  "rendered": "Meals",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeStyle": Object {
                      "backgroundColor": "white",
                      "color": "slategasy",
                    },
                    "children": "Menu",
                    "href": "/adminMenu",
                    "tag": "a",
                  },
                  "ref": null,
                  "rendered": "Menu",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeStyle": Object {
                      "backgroundColor": "white",
                      "color": "slategasy",
                    },
                    "children": "Orders",
                    "href": "/adminOrders",
                    "tag": "a",
                  },
                  "ref": null,
                  "rendered": "Orders",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "activeStyle": Object {
                      "backgroundColor": "white",
                      "color": "slategasy",
                    },
                    "children": "Logout",
                    "href": "/adminlogin",
                    "tag": "a",
                  },
                  "ref": null,
                  "rendered": "Logout",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
              <_class
                            options={Object {}}
              />
              <Modal
                            autoFocus={true}
                            backdrop={true}
                            backdropTransition={
                                          Object {
                                                        "timeout": 1300,
                                                      }
                            }
                            centered={false}
                            className=""
                            fade={true}
                            isOpen={false}
                            keyboard={true}
                            modalTransition={
                                          Object {
                                                        "timeout": 300,
                                                      }
                            }
                            onClosed={[Function]}
                            onOpened={[Function]}
                            role="dialog"
                            toggle={[Function]}
                            zIndex={1050}
              >
                            <ModalHeader
                                          charCode={215}
                                          closeAriaLabel="Close"
                                          tag="h5"
                                          wrapTag="div"
                            >
                                          Meals
                            </ModalHeader>
                            <ModalBody
                                          tag="div"
                            >
                                          <Connect(UpdateMealForm)
                                                        id={null}
                                                        name=""
                                                        price=""
                                          />
                            </ModalBody>
              </Modal>
              <Modal
                            autoFocus={true}
                            backdrop={true}
                            backdropTransition={
                                          Object {
                                                        "timeout": 1300,
                                                      }
                            }
                            centered={false}
                            className=""
                            fade={true}
                            isOpen={false}
                            keyboard={true}
                            modalTransition={
                                          Object {
                                                        "timeout": 300,
                                                      }
                            }
                            onClosed={[Function]}
                            onOpened={[Function]}
                            role="dialog"
                            toggle={[Function]}
                            zIndex={1050}
              >
                            <ModalHeader
                                          charCode={215}
                                          closeAriaLabel="Close"
                                          tag="h5"
                                          toggle={[Function]}
                                          wrapTag="div"
                            >
                                          Meals
                            </ModalHeader>
                            <ModalBody
                                          tag="div"
                            >
                                          <h4>
                                                        Are you sure you want to delete this meal?
                                          </h4>
                            </ModalBody>
                            <ModalFooter
                                          tag="div"
                            >
                                          <button
                                                        className="btn btn-danger"
                                                        onClick={[Function]}
                                          >
                                                        Yes
                                          </button>
                                          <button
                                                        className="btn btn-primary"
                                                        onClick={[Function]}
                                          >
                                                        No
                                          </button>
                            </ModalFooter>
              </Modal>
</div>,
            <Button
              className="btn btn-success btn-sm"
              color="secondary"
              onClick={[Function]}
              style={
                            Object {
                                          "height": "2rem",
                                          "width": "4rem",
                                        }
              }
              tag="button"
>
              Add
</Button>,
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropTransition={
                            Object {
                                          "timeout": 1300,
                                        }
              }
              centered={false}
              className=""
              fade={true}
              id="add"
              isOpen={false}
              keyboard={true}
              modalTransition={
                            Object {
                                          "timeout": 300,
                                        }
              }
              onClosed={[Function]}
              onOpened={[Function]}
              role="dialog"
              toggle={[Function]}
              zIndex={1050}
>
              <ModalHeader
                            charCode={215}
                            closeAriaLabel="Close"
                            tag="h5"
                            toggle={[Function]}
                            wrapTag="div"
              >
                            Meals
              </ModalHeader>
              <ModalBody
                            tag="div"
              >
                            <Connect(AddMealForm) />
              </ModalBody>
</Modal>,
          ],
          "className": "float-right",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <_class
                  options={Object {}}
/>,
                Array [],
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropTransition={
                                    Object {
                                                      "timeout": 1300,
                                                    }
                  }
                  centered={false}
                  className=""
                  fade={true}
                  isOpen={false}
                  keyboard={true}
                  modalTransition={
                                    Object {
                                                      "timeout": 300,
                                                    }
                  }
                  onClosed={[Function]}
                  onOpened={[Function]}
                  role="dialog"
                  toggle={[Function]}
                  zIndex={1050}
>
                  <ModalHeader
                                    charCode={215}
                                    closeAriaLabel="Close"
                                    tag="h5"
                                    wrapTag="div"
                  >
                                    Meals
                  </ModalHeader>
                  <ModalBody
                                    tag="div"
                  >
                                    <Connect(UpdateMealForm)
                                                      id={null}
                                                      name=""
                                                      price=""
                                    />
                  </ModalBody>
</Modal>,
                <Modal
                  autoFocus={true}
                  backdrop={true}
                  backdropTransition={
                                    Object {
                                                      "timeout": 1300,
                                                    }
                  }
                  centered={false}
                  className=""
                  fade={true}
                  isOpen={false}
                  keyboard={true}
                  modalTransition={
                                    Object {
                                                      "timeout": 300,
                                                    }
                  }
                  onClosed={[Function]}
                  onOpened={[Function]}
                  role="dialog"
                  toggle={[Function]}
                  zIndex={1050}
>
                  <ModalHeader
                                    charCode={215}
                                    closeAriaLabel="Close"
                                    tag="h5"
                                    toggle={[Function]}
                                    wrapTag="div"
                  >
                                    Meals
                  </ModalHeader>
                  <ModalBody
                                    tag="div"
                  >
                                    <h4>
                                                      Are you sure you want to delete this meal?
                                    </h4>
                  </ModalBody>
                  <ModalFooter
                                    tag="div"
                  >
                                    <button
                                                      className="btn btn-danger"
                                                      onClick={[Function]}
                                    >
                                                      Yes
                                    </button>
                                    <button
                                                      className="btn btn-primary"
                                                      onClick={[Function]}
                                    >
                                                      No
                                    </button>
                  </ModalFooter>
</Modal>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "options": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "backdrop": true,
                  "backdropTransition": Object {
                    "timeout": 1300,
                  },
                  "centered": false,
                  "children": Array [
                    <ModalHeader
                      charCode={215}
                      closeAriaLabel="Close"
                      tag="h5"
                      wrapTag="div"
>
                      Meals
</ModalHeader>,
                    <ModalBody
                      tag="div"
>
                      <Connect(UpdateMealForm)
                                            id={null}
                                            name=""
                                            price=""
                      />
</ModalBody>,
                  ],
                  "className": "",
                  "fade": true,
                  "isOpen": false,
                  "keyboard": true,
                  "modalTransition": Object {
                    "timeout": 300,
                  },
                  "onClosed": [Function],
                  "onOpened": [Function],
                  "role": "dialog",
                  "toggle": [Function],
                  "zIndex": 1050,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "charCode": 215,
                      "children": "Meals",
                      "closeAriaLabel": "Close",
                      "tag": "h5",
                      "wrapTag": "div",
                    },
                    "ref": null,
                    "rendered": "Meals",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <Connect(UpdateMealForm)
                        id={null}
                        name=""
                        price=""
/>,
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "id": null,
                        "name": "",
                        "price": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoFocus": true,
                  "backdrop": true,
                  "backdropTransition": Object {
                    "timeout": 1300,
                  },
                  "centered": false,
                  "children": Array [
                    <ModalHeader
                      charCode={215}
                      closeAriaLabel="Close"
                      tag="h5"
                      toggle={[Function]}
                      wrapTag="div"
>
                      Meals
</ModalHeader>,
                    <ModalBody
                      tag="div"
>
                      <h4>
                                            Are you sure you want to delete this meal?
                      </h4>
</ModalBody>,
                    <ModalFooter
                      tag="div"
>
                      <button
                                            className="btn btn-danger"
                                            onClick={[Function]}
                      >
                                            Yes
                      </button>
                      <button
                                            className="btn btn-primary"
                                            onClick={[Function]}
                      >
                                            No
                      </button>
</ModalFooter>,
                  ],
                  "className": "",
                  "fade": true,
                  "isOpen": false,
                  "keyboard": true,
                  "modalTransition": Object {
                    "timeout": 300,
                  },
                  "onClosed": [Function],
                  "onOpened": [Function],
                  "role": "dialog",
                  "toggle": [Function],
                  "zIndex": 1050,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "charCode": 215,
                      "children": "Meals",
                      "closeAriaLabel": "Close",
                      "tag": "h5",
                      "toggle": [Function],
                      "wrapTag": "div",
                    },
                    "ref": null,
                    "rendered": "Meals",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": <h4>
                        Are you sure you want to delete this meal?
</h4>,
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Are you sure you want to delete this meal?",
                      },
                      "ref": null,
                      "rendered": "Are you sure you want to delete this meal?",
                      "type": "h4",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "children": Array [
                        <button
                          className="btn btn-danger"
                          onClick={[Function]}
>
                          Yes
</button>,
                        <button
                          className="btn btn-primary"
                          onClick={[Function]}
>
                          No
</button>,
                      ],
                      "tag": "div",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Yes",
                          "className": "btn btn-danger",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "Yes",
                        "type": "button",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "No",
                          "className": "btn btn-primary",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": "No",
                        "type": "button",
                      },
                    ],
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Add",
              "className": "btn btn-success btn-sm",
              "color": "secondary",
              "onClick": [Function],
              "style": Object {
                "height": "2rem",
                "width": "4rem",
              },
              "tag": "button",
            },
            "ref": null,
            "rendered": "Add",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoFocus": true,
              "backdrop": true,
              "backdropTransition": Object {
                "timeout": 1300,
              },
              "centered": false,
              "children": Array [
                <ModalHeader
                  charCode={215}
                  closeAriaLabel="Close"
                  tag="h5"
                  toggle={[Function]}
                  wrapTag="div"
>
                  Meals
</ModalHeader>,
                <ModalBody
                  tag="div"
>
                  <Connect(AddMealForm) />
</ModalBody>,
              ],
              "className": "",
              "fade": true,
              "id": "add",
              "isOpen": false,
              "keyboard": true,
              "modalTransition": Object {
                "timeout": 300,
              },
              "onClosed": [Function],
              "onOpened": [Function],
              "role": "dialog",
              "toggle": [Function],
              "zIndex": 1050,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "charCode": 215,
                  "children": "Meals",
                  "closeAriaLabel": "Close",
                  "tag": "h5",
                  "toggle": [Function],
                  "wrapTag": "div",
                },
                "ref": null,
                "rendered": "Meals",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <Connect(AddMealForm) />,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Navbar
            color="success"
            expand="md"
            light={true}
            tag="nav"
>
            <NavbarBrand
                        href="/"
                        tag="a"
            >
                        Book-A-Meal | Home 
            </NavbarBrand>
            <NavbarToggler
                        onClick={[Function]}
                        tag="button"
                        type="button"
            />
            <Collapse
                        appear={false}
                        enter={true}
                        exit={true}
                        in={false}
                        isOpen={false}
                        mountOnEnter={false}
                        navbar={true}
                        onEnter={[Function]}
                        onEntered={[Function]}
                        onEntering={[Function]}
                        onExit={[Function]}
                        onExited={[Function]}
                        onExiting={[Function]}
                        tag="div"
                        timeout={350}
                        unmountOnExit={false}
            >
                        <Nav
                                    className="ml-auto"
                                    navbar={true}
                                    tag="ul"
                                    vertical={false}
                        >
                                    <NavLink
                                                activeStyle={
                                                            Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                                }
                                                href="/getMeals"
                                                tag="a"
                                    >
                                                Meals
                                    </NavLink>
                                    <NavLink
                                                activeStyle={
                                                            Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                                }
                                                href="/adminMenu"
                                                tag="a"
                                    >
                                                Menu
                                    </NavLink>
                                    <NavLink
                                                activeStyle={
                                                            Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                                }
                                                href="/adminOrders"
                                                tag="a"
                                    >
                                                Orders
                                    </NavLink>
                                    <NavLink
                                                activeStyle={
                                                            Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                                }
                                                href="/adminlogin"
                                                tag="a"
                                    >
                                                Logout
                                    </NavLink>
                        </Nav>
            </Collapse>
</Navbar>,
          <div
            className="float-right"
>
            <div>
                        <_class
                                    options={Object {}}
                        />
                        <Modal
                                    autoFocus={true}
                                    backdrop={true}
                                    backdropTransition={
                                                Object {
                                                            "timeout": 1300,
                                                          }
                                    }
                                    centered={false}
                                    className=""
                                    fade={true}
                                    isOpen={false}
                                    keyboard={true}
                                    modalTransition={
                                                Object {
                                                            "timeout": 300,
                                                          }
                                    }
                                    onClosed={[Function]}
                                    onOpened={[Function]}
                                    role="dialog"
                                    toggle={[Function]}
                                    zIndex={1050}
                        >
                                    <ModalHeader
                                                charCode={215}
                                                closeAriaLabel="Close"
                                                tag="h5"
                                                wrapTag="div"
                                    >
                                                Meals
                                    </ModalHeader>
                                    <ModalBody
                                                tag="div"
                                    >
                                                <Connect(UpdateMealForm)
                                                            id={null}
                                                            name=""
                                                            price=""
                                                />
                                    </ModalBody>
                        </Modal>
                        <Modal
                                    autoFocus={true}
                                    backdrop={true}
                                    backdropTransition={
                                                Object {
                                                            "timeout": 1300,
                                                          }
                                    }
                                    centered={false}
                                    className=""
                                    fade={true}
                                    isOpen={false}
                                    keyboard={true}
                                    modalTransition={
                                                Object {
                                                            "timeout": 300,
                                                          }
                                    }
                                    onClosed={[Function]}
                                    onOpened={[Function]}
                                    role="dialog"
                                    toggle={[Function]}
                                    zIndex={1050}
                        >
                                    <ModalHeader
                                                charCode={215}
                                                closeAriaLabel="Close"
                                                tag="h5"
                                                toggle={[Function]}
                                                wrapTag="div"
                                    >
                                                Meals
                                    </ModalHeader>
                                    <ModalBody
                                                tag="div"
                                    >
                                                <h4>
                                                            Are you sure you want to delete this meal?
                                                </h4>
                                    </ModalBody>
                                    <ModalFooter
                                                tag="div"
                                    >
                                                <button
                                                            className="btn btn-danger"
                                                            onClick={[Function]}
                                                >
                                                            Yes
                                                </button>
                                                <button
                                                            className="btn btn-primary"
                                                            onClick={[Function]}
                                                >
                                                            No
                                                </button>
                                    </ModalFooter>
                        </Modal>
            </div>
            <Button
                        className="btn btn-success btn-sm"
                        color="secondary"
                        onClick={[Function]}
                        style={
                                    Object {
                                                "height": "2rem",
                                                "width": "4rem",
                                              }
                        }
                        tag="button"
            >
                        Add
            </Button>
            <Modal
                        autoFocus={true}
                        backdrop={true}
                        backdropTransition={
                                    Object {
                                                "timeout": 1300,
                                              }
                        }
                        centered={false}
                        className=""
                        fade={true}
                        id="add"
                        isOpen={false}
                        keyboard={true}
                        modalTransition={
                                    Object {
                                                "timeout": 300,
                                              }
                        }
                        onClosed={[Function]}
                        onOpened={[Function]}
                        role="dialog"
                        toggle={[Function]}
                        zIndex={1050}
            >
                        <ModalHeader
                                    charCode={215}
                                    closeAriaLabel="Close"
                                    tag="h5"
                                    toggle={[Function]}
                                    wrapTag="div"
                        >
                                    Meals
                        </ModalHeader>
                        <ModalBody
                                    tag="div"
                        >
                                    <Connect(AddMealForm) />
                        </ModalBody>
            </Modal>
</div>,
        ],
        "tag": "div",
        "widths": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <NavbarBrand
                href="/"
                tag="a"
>
                Book-A-Meal | Home 
</NavbarBrand>,
              <NavbarToggler
                onClick={[Function]}
                tag="button"
                type="button"
/>,
              <Collapse
                appear={false}
                enter={true}
                exit={true}
                in={false}
                isOpen={false}
                mountOnEnter={false}
                navbar={true}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                tag="div"
                timeout={350}
                unmountOnExit={false}
>
                <Nav
                                className="ml-auto"
                                navbar={true}
                                tag="ul"
                                vertical={false}
                >
                                <NavLink
                                                activeStyle={
                                                                Object {
                                                                                "backgroundColor": "white",
                                                                                "color": "slategasy",
                                                                              }
                                                }
                                                href="/getMeals"
                                                tag="a"
                                >
                                                Meals
                                </NavLink>
                                <NavLink
                                                activeStyle={
                                                                Object {
                                                                                "backgroundColor": "white",
                                                                                "color": "slategasy",
                                                                              }
                                                }
                                                href="/adminMenu"
                                                tag="a"
                                >
                                                Menu
                                </NavLink>
                                <NavLink
                                                activeStyle={
                                                                Object {
                                                                                "backgroundColor": "white",
                                                                                "color": "slategasy",
                                                                              }
                                                }
                                                href="/adminOrders"
                                                tag="a"
                                >
                                                Orders
                                </NavLink>
                                <NavLink
                                                activeStyle={
                                                                Object {
                                                                                "backgroundColor": "white",
                                                                                "color": "slategasy",
                                                                              }
                                                }
                                                href="/adminlogin"
                                                tag="a"
                                >
                                                Logout
                                </NavLink>
                </Nav>
</Collapse>,
            ],
            "color": "success",
            "expand": "md",
            "light": true,
            "tag": "nav",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Book-A-Meal | Home ",
                "href": "/",
                "tag": "a",
              },
              "ref": null,
              "rendered": "Book-A-Meal | Home ",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "onClick": [Function],
                "tag": "button",
                "type": "button",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "appear": false,
                "children": <Nav
                  className="ml-auto"
                  navbar={true}
                  tag="ul"
                  vertical={false}
>
                  <NavLink
                                    activeStyle={
                                                      Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                    }
                                    href="/getMeals"
                                    tag="a"
                  >
                                    Meals
                  </NavLink>
                  <NavLink
                                    activeStyle={
                                                      Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                    }
                                    href="/adminMenu"
                                    tag="a"
                  >
                                    Menu
                  </NavLink>
                  <NavLink
                                    activeStyle={
                                                      Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                    }
                                    href="/adminOrders"
                                    tag="a"
                  >
                                    Orders
                  </NavLink>
                  <NavLink
                                    activeStyle={
                                                      Object {
                                                                        "backgroundColor": "white",
                                                                        "color": "slategasy",
                                                                      }
                                    }
                                    href="/adminlogin"
                                    tag="a"
                  >
                                    Logout
                  </NavLink>
</Nav>,
                "enter": true,
                "exit": true,
                "in": false,
                "isOpen": false,
                "mountOnEnter": false,
                "navbar": true,
                "onEnter": [Function],
                "onEntered": [Function],
                "onEntering": [Function],
                "onExit": [Function],
                "onExited": [Function],
                "onExiting": [Function],
                "tag": "div",
                "timeout": 350,
                "unmountOnExit": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <NavLink
                      activeStyle={
                                            Object {
                                                                  "backgroundColor": "white",
                                                                  "color": "slategasy",
                                                                }
                      }
                      href="/getMeals"
                      tag="a"
>
                      Meals
</NavLink>,
                    <NavLink
                      activeStyle={
                                            Object {
                                                                  "backgroundColor": "white",
                                                                  "color": "slategasy",
                                                                }
                      }
                      href="/adminMenu"
                      tag="a"
>
                      Menu
</NavLink>,
                    <NavLink
                      activeStyle={
                                            Object {
                                                                  "backgroundColor": "white",
                                                                  "color": "slategasy",
                                                                }
                      }
                      href="/adminOrders"
                      tag="a"
>
                      Orders
</NavLink>,
                    <NavLink
                      activeStyle={
                                            Object {
                                                                  "backgroundColor": "white",
                                                                  "color": "slategasy",
                                                                }
                      }
                      href="/adminlogin"
                      tag="a"
>
                      Logout
</NavLink>,
                  ],
                  "className": "ml-auto",
                  "navbar": true,
                  "tag": "ul",
                  "vertical": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "activeStyle": Object {
                        "backgroundColor": "white",
                        "color": "slategasy",
                      },
                      "children": "Meals",
                      "href": "/getMeals",
                      "tag": "a",
                    },
                    "ref": null,
                    "rendered": "Meals",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "activeStyle": Object {
                        "backgroundColor": "white",
                        "color": "slategasy",
                      },
                      "children": "Menu",
                      "href": "/adminMenu",
                      "tag": "a",
                    },
                    "ref": null,
                    "rendered": "Menu",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "activeStyle": Object {
                        "backgroundColor": "white",
                        "color": "slategasy",
                      },
                      "children": "Orders",
                      "href": "/adminOrders",
                      "tag": "a",
                    },
                    "ref": null,
                    "rendered": "Orders",
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "activeStyle": Object {
                        "backgroundColor": "white",
                        "color": "slategasy",
                      },
                      "children": "Logout",
                      "href": "/adminlogin",
                      "tag": "a",
                    },
                    "ref": null,
                    "rendered": "Logout",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                <_class
                                options={Object {}}
                />
                <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropTransition={
                                                Object {
                                                                "timeout": 1300,
                                                              }
                                }
                                centered={false}
                                className=""
                                fade={true}
                                isOpen={false}
                                keyboard={true}
                                modalTransition={
                                                Object {
                                                                "timeout": 300,
                                                              }
                                }
                                onClosed={[Function]}
                                onOpened={[Function]}
                                role="dialog"
                                toggle={[Function]}
                                zIndex={1050}
                >
                                <ModalHeader
                                                charCode={215}
                                                closeAriaLabel="Close"
                                                tag="h5"
                                                wrapTag="div"
                                >
                                                Meals
                                </ModalHeader>
                                <ModalBody
                                                tag="div"
                                >
                                                <Connect(UpdateMealForm)
                                                                id={null}
                                                                name=""
                                                                price=""
                                                />
                                </ModalBody>
                </Modal>
                <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropTransition={
                                                Object {
                                                                "timeout": 1300,
                                                              }
                                }
                                centered={false}
                                className=""
                                fade={true}
                                isOpen={false}
                                keyboard={true}
                                modalTransition={
                                                Object {
                                                                "timeout": 300,
                                                              }
                                }
                                onClosed={[Function]}
                                onOpened={[Function]}
                                role="dialog"
                                toggle={[Function]}
                                zIndex={1050}
                >
                                <ModalHeader
                                                charCode={215}
                                                closeAriaLabel="Close"
                                                tag="h5"
                                                toggle={[Function]}
                                                wrapTag="div"
                                >
                                                Meals
                                </ModalHeader>
                                <ModalBody
                                                tag="div"
                                >
                                                <h4>
                                                                Are you sure you want to delete this meal?
                                                </h4>
                                </ModalBody>
                                <ModalFooter
                                                tag="div"
                                >
                                                <button
                                                                className="btn btn-danger"
                                                                onClick={[Function]}
                                                >
                                                                Yes
                                                </button>
                                                <button
                                                                className="btn btn-primary"
                                                                onClick={[Function]}
                                                >
                                                                No
                                                </button>
                                </ModalFooter>
                </Modal>
</div>,
              <Button
                className="btn btn-success btn-sm"
                color="secondary"
                onClick={[Function]}
                style={
                                Object {
                                                "height": "2rem",
                                                "width": "4rem",
                                              }
                }
                tag="button"
>
                Add
</Button>,
              <Modal
                autoFocus={true}
                backdrop={true}
                backdropTransition={
                                Object {
                                                "timeout": 1300,
                                              }
                }
                centered={false}
                className=""
                fade={true}
                id="add"
                isOpen={false}
                keyboard={true}
                modalTransition={
                                Object {
                                                "timeout": 300,
                                              }
                }
                onClosed={[Function]}
                onOpened={[Function]}
                role="dialog"
                toggle={[Function]}
                zIndex={1050}
>
                <ModalHeader
                                charCode={215}
                                closeAriaLabel="Close"
                                tag="h5"
                                toggle={[Function]}
                                wrapTag="div"
                >
                                Meals
                </ModalHeader>
                <ModalBody
                                tag="div"
                >
                                <Connect(AddMealForm) />
                </ModalBody>
</Modal>,
            ],
            "className": "float-right",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <_class
                    options={Object {}}
/>,
                  Array [],
                  <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                                        Object {
                                                            "timeout": 1300,
                                                          }
                    }
                    centered={false}
                    className=""
                    fade={true}
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                                        Object {
                                                            "timeout": 300,
                                                          }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    role="dialog"
                    toggle={[Function]}
                    zIndex={1050}
>
                    <ModalHeader
                                        charCode={215}
                                        closeAriaLabel="Close"
                                        tag="h5"
                                        wrapTag="div"
                    >
                                        Meals
                    </ModalHeader>
                    <ModalBody
                                        tag="div"
                    >
                                        <Connect(UpdateMealForm)
                                                            id={null}
                                                            name=""
                                                            price=""
                                        />
                    </ModalBody>
</Modal>,
                  <Modal
                    autoFocus={true}
                    backdrop={true}
                    backdropTransition={
                                        Object {
                                                            "timeout": 1300,
                                                          }
                    }
                    centered={false}
                    className=""
                    fade={true}
                    isOpen={false}
                    keyboard={true}
                    modalTransition={
                                        Object {
                                                            "timeout": 300,
                                                          }
                    }
                    onClosed={[Function]}
                    onOpened={[Function]}
                    role="dialog"
                    toggle={[Function]}
                    zIndex={1050}
>
                    <ModalHeader
                                        charCode={215}
                                        closeAriaLabel="Close"
                                        tag="h5"
                                        toggle={[Function]}
                                        wrapTag="div"
                    >
                                        Meals
                    </ModalHeader>
                    <ModalBody
                                        tag="div"
                    >
                                        <h4>
                                                            Are you sure you want to delete this meal?
                                        </h4>
                    </ModalBody>
                    <ModalFooter
                                        tag="div"
                    >
                                        <button
                                                            className="btn btn-danger"
                                                            onClick={[Function]}
                                        >
                                                            Yes
                                        </button>
                                        <button
                                                            className="btn btn-primary"
                                                            onClick={[Function]}
                                        >
                                                            No
                                        </button>
                    </ModalFooter>
</Modal>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "options": Object {},
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoFocus": true,
                    "backdrop": true,
                    "backdropTransition": Object {
                      "timeout": 1300,
                    },
                    "centered": false,
                    "children": Array [
                      <ModalHeader
                        charCode={215}
                        closeAriaLabel="Close"
                        tag="h5"
                        wrapTag="div"
>
                        Meals
</ModalHeader>,
                      <ModalBody
                        tag="div"
>
                        <Connect(UpdateMealForm)
                                                id={null}
                                                name=""
                                                price=""
                        />
</ModalBody>,
                    ],
                    "className": "",
                    "fade": true,
                    "isOpen": false,
                    "keyboard": true,
                    "modalTransition": Object {
                      "timeout": 300,
                    },
                    "onClosed": [Function],
                    "onOpened": [Function],
                    "role": "dialog",
                    "toggle": [Function],
                    "zIndex": 1050,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "charCode": 215,
                        "children": "Meals",
                        "closeAriaLabel": "Close",
                        "tag": "h5",
                        "wrapTag": "div",
                      },
                      "ref": null,
                      "rendered": "Meals",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <Connect(UpdateMealForm)
                          id={null}
                          name=""
                          price=""
/>,
                        "tag": "div",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "id": null,
                          "name": "",
                          "price": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoFocus": true,
                    "backdrop": true,
                    "backdropTransition": Object {
                      "timeout": 1300,
                    },
                    "centered": false,
                    "children": Array [
                      <ModalHeader
                        charCode={215}
                        closeAriaLabel="Close"
                        tag="h5"
                        toggle={[Function]}
                        wrapTag="div"
>
                        Meals
</ModalHeader>,
                      <ModalBody
                        tag="div"
>
                        <h4>
                                                Are you sure you want to delete this meal?
                        </h4>
</ModalBody>,
                      <ModalFooter
                        tag="div"
>
                        <button
                                                className="btn btn-danger"
                                                onClick={[Function]}
                        >
                                                Yes
                        </button>
                        <button
                                                className="btn btn-primary"
                                                onClick={[Function]}
                        >
                                                No
                        </button>
</ModalFooter>,
                    ],
                    "className": "",
                    "fade": true,
                    "isOpen": false,
                    "keyboard": true,
                    "modalTransition": Object {
                      "timeout": 300,
                    },
                    "onClosed": [Function],
                    "onOpened": [Function],
                    "role": "dialog",
                    "toggle": [Function],
                    "zIndex": 1050,
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "charCode": 215,
                        "children": "Meals",
                        "closeAriaLabel": "Close",
                        "tag": "h5",
                        "toggle": [Function],
                        "wrapTag": "div",
                      },
                      "ref": null,
                      "rendered": "Meals",
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": <h4>
                          Are you sure you want to delete this meal?
</h4>,
                        "tag": "div",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Are you sure you want to delete this meal?",
                        },
                        "ref": null,
                        "rendered": "Are you sure you want to delete this meal?",
                        "type": "h4",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "children": Array [
                          <button
                            className="btn btn-danger"
                            onClick={[Function]}
>
                            Yes
</button>,
                          <button
                            className="btn btn-primary"
                            onClick={[Function]}
>
                            No
</button>,
                        ],
                        "tag": "div",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "Yes",
                            "className": "btn btn-danger",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "Yes",
                          "type": "button",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "No",
                            "className": "btn btn-primary",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "rendered": "No",
                          "type": "button",
                        },
                      ],
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Add",
                "className": "btn btn-success btn-sm",
                "color": "secondary",
                "onClick": [Function],
                "style": Object {
                  "height": "2rem",
                  "width": "4rem",
                },
                "tag": "button",
              },
              "ref": null,
              "rendered": "Add",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoFocus": true,
                "backdrop": true,
                "backdropTransition": Object {
                  "timeout": 1300,
                },
                "centered": false,
                "children": Array [
                  <ModalHeader
                    charCode={215}
                    closeAriaLabel="Close"
                    tag="h5"
                    toggle={[Function]}
                    wrapTag="div"
>
                    Meals
</ModalHeader>,
                  <ModalBody
                    tag="div"
>
                    <Connect(AddMealForm) />
</ModalBody>,
                ],
                "className": "",
                "fade": true,
                "id": "add",
                "isOpen": false,
                "keyboard": true,
                "modalTransition": Object {
                  "timeout": 300,
                },
                "onClosed": [Function],
                "onOpened": [Function],
                "role": "dialog",
                "toggle": [Function],
                "zIndex": 1050,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "charCode": 215,
                    "children": "Meals",
                    "closeAriaLabel": "Close",
                    "tag": "h5",
                    "toggle": [Function],
                    "wrapTag": "div",
                  },
                  "ref": null,
                  "rendered": "Meals",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <Connect(AddMealForm) />,
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
